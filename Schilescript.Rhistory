geom_smooth(aes(group = Habitat), method = "lm", se = FALSE) +
theme(legend.position = "top-right") +
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
theme(axis.text = element_text(size = 12)) +
theme(axis.title  = element_text(size = 14))
print(scatterplot)
# Load necessary libraries
library(tidyverse)
library(ggExtra)
library(broom)
# Read the CSV file into a data frame
combined_data <- read.csv("combined/AllCombined.csv")
# Filter data for "Marsh" and "Mangrove" habitats and CN > 5
filtered_data <- combined_data %>%
filter(Habitat %in% c("marsh", "mangrove"),
CN > 5, CN < 100)  #filter out some wacky low and CN data
# Create a scatter plot with open circles and color by Habitat
plot <- ggplot(filtered_data, aes(x = OC_perc, y = N_perc, color = Habitat)) +
geom_point(shape = 1, alpha = 0.5) +  # Use shape = 1 for an open circle and set transparency
labs(title = NULL,
x = "Soil [Organic C] (%)",
y = "Soil [N] (%)") +
theme_minimal() +  # Adjusted to remove the gray background
theme(panel.grid = element_blank()) +
geom_smooth(aes(group = Habitat), method = "lm", se = FALSE) +  # Add linear best fit lines
theme(legend.position = "top-right") +  # Move the legend to the bottom
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
theme(axis.text = element_text(size=12))+  # Adjust laxis font size
theme(axis.title  = element_text(size=14))
# Add text annotations to the graph panel
annotations <- data.frame(
x = c(18, 40),  # Specify x-coordinates of the annotations
y = c(2.5, .4),  # Specify y-coordinates of the annotations
label = c("Marsh", "Mangrove"),  # Specify the text labels
color = c("#00BFC4", "#F8766D")  # Specify color
)
# Add annotations to the plot
plot_with_annotations <- plot +
annotate("text", x = annotations$x, y = annotations$y, label = annotations$label, size = 5, color = annotations$color)
# Create marginal histograms with white fill
histo <- ggMarginal(plot_with_annotations, type = "histogram", bins = 40, fill = "lightgray", line = "lightgray")
# Fit linear models
lm_equations <- filtered_data %>%
group_by(Habitat) %>%
do(broom::tidy(lm(N_perc ~ OC_perc, data = .)))
# Print the equations
print(lm_equations)
print(histo)
library(dplyr)
library(tidyr)
# Read the CSV files into data frames
df1 <- read.csv("carbon/Wang_et_al_2021_car.csv")
# Read the CSV file into a data frame
All_combined <- read.csv("combined/AllCombined.csv")
# Assuming that All_combined has a "Habitat" column
All_combined <- All_combined %>%
filter(CN>1,CN<100, Habitat %in% c("marsh", "mangrove"))
# Calculate the mean value of the CN column and handle missing and infinite values
mean_CN <- mean(All_combined$CN[is.finite(All_combined$CN)], na.rm = TRUE)
Ndensity <- 1000* All_combined$N_perc/100*All_combined$BD_reported_g_cm3
print(Ndensity)
ggplot(All_combined, aes(y = Ndensity, fill = Habitat)) +
geom_histogram(bins= 40, color = "white") +
labs(
title = NULL,
y = expression("N density (mg N" ~ cm^{-3} ~ ")"),
x = "Observations"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text = element_text(size = 14),
axis.line.x = element_line(linewidth = 0.2),
axis.line.y = element_line(linewidth = 0.2),
legend.position = c(0.7, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 12)
) +
# Adjusted limits based on your preferences
#breaks = seq(0, 55, by = 10)  # Specify tick mark positions
#)
#scale_y_log10()+  # Log-scale the y-axis
scale_y_continuous(
limits = c(0.0, 6))+
scale_fill_manual(values = c("marsh" = "#00BFC4", "mangrove" = "#F8766D"))  # Specify colors for each level
Summary<-df %>%
group_by(Habitat) %>%
summary(Ndensity, na.rm=TRUE)
print (Summary) # ("mg cm-3")
print(summary(Ndensity, na.rm=TRUE))
library(dplyr)
library(tidyr)
library(ggplot2)
# ... (previous code remains unchanged)
# Create a histogram faceted by Habitat
hist_plot <- ggplot(All_combined, aes(y = CN, fill = Habitat)) +
geom_histogram(bins = 40, color = "white") +
labs(
title = NULL,
y = expression("Soil CN ratio"),
x = "Observations"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text = element_text(size = 14),
axis.line.x = element_line(linewidth = 0.2),
axis.line.y = element_line(linewidth = 0.2),
legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text = element_text(size = 11)
) +
scale_y_continuous(limits = c(0, 50)) +
#scale_y_log10() +  # Log-scale the y-axis
facet_wrap(~Habitat, scales = "free_x")  # Facet by Habitat with free y-axes
print(hist_plot)
# Load the necessary library
library(readr)
library(dplyr)
# Read the CSV file into a data frame
#df <- read_csv("combined/CCN_combined_data.csv")
#df<- read_csv("combined/Maxwell_combined_data.csv")
#total segments for CCN
unique_combinations <- df %>%
filter(Database %in% ("CCN"))%>%
distinct(study_site_core, U_depth_m) %>%
summarise(unique_combinations_count = n())
# Load the necessary library
library(readr)
library(dplyr)
# Read the CSV file into a data frame
#df <- read_csv("combined/CCN_combined_data.csv")
#df<- read_csv("combined/Maxwell_combined_data.csv")
#total segments for CCN
unique_combinations <- df %>%
filter(Database %in% ("CCN"))%>%
distinct(study_site_core, U_depth_m) %>%
summarise(unique_combinations_count = n())
# Install and load necessary libraries
# install.packages(c("sf", "rnaturalearth", "rnaturalearthdata"))
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
library(dplyr)
# Read your data (replace "your_data.csv" with your actual file name)
df1 <- read.csv("combined/AllCombined.csv")
df1_concatenated <- df1 %>%
mutate(site_plot = paste(Source, Site_name, Site, Plot, sep = "_"))
# Install and load necessary libraries
# install.packages(c("sf", "rnaturalearth", "rnaturalearthdata"))
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
library(dplyr)
# Read your data (replace "your_data.csv" with your actual file name)
df1 <- read.csv("combined/AllCombined.csv")
df1_concatenated <- df1 %>%
mutate(site_plot = paste(study_id, site_id, core_id, sep = "_"))
# Convert Latitude and Longitude to numeric if needed
df1_concatenated$Latitude <- as.numeric(df1_concatenated$Latitude)
df1_concatenated$Longitude <- as.numeric(df1_concatenated$Longitude)
# summarize
df1_summarized <- df1_concatenated %>%
group_by(site_plot) %>%
summarize(
MeanLatitude = mean(Latitude, na.rm = TRUE),
MeanLongitude = mean(Longitude, na.rm = TRUE),
Habitat = Habitat # Add other summary statistics or variables as needed
)
# Load world map data from rnaturalearth
world <- ne_countries(scale = "medium", returnclass = "sf")
# Create a scatter plot of latitude vs longitude with a world map background
ggplot() +
geom_sf(data = world, fill = "white", color = "gray") +
geom_point(data = df1_summarized, aes(x = MeanLongitude, y = MeanLatitude, color = Habitat), shape = 1, size = 1, alpha=.5) +
labs(title = NULL,
x = NULL,
y = NULL) +
theme_minimal() +
theme(
legend.position = "none"  # Remove legend
) +
scale_color_manual(values = c("marsh" = "#00BFC4", "mangrove" = "#F8766D")) + # Specify colors for each level
coord_sf(lims_method = "geometry_bbox")  # Set lims_method to resolve the issue
head(export_df)
# working as of 1-1-24
#Install and load necessary packages if not already installed
# install.packages(c("dplyr", "purrr"))
library(dplyr)
library(purrr)
# Set the path to the folder containing your CSV files
folder_path <- "refined/"
# Get a list of all CSV files in the folder
csv_files <- list.files(path = folder_path, pattern = "\\.csv$", full.names = TRUE)
# Read all CSV files into a list of data frames
list_of_dfs <- map(csv_files, ~{
df <- read.csv(.)
columns_to_convert <- c("Latitude", "Longitude", "core_id", "Core")
for (col in columns_to_convert) {
if (col %in% colnames(df)) {
df <- mutate(df, !!col := as.character(!!sym(col)))
}
}
return(df)
})
# Check the structure of each data frame
walk(list_of_dfs, ~str(.))
# Combine all data frames into one
combined_data <- bind_rows(list_of_dfs, .id = "file_id")
# Add a new column with the value "Maxwell" for every row
combined_data1 <- mutate(combined_data, Database = "Maxwell")%>%
mutate(study_site_core= paste(study_id,site_id, core_id, sep = "_"))
# Reorganize columns to make "NewColumn" the first column
combined_data2 <- combined_data1 %>%
dplyr::select(Database, Source, study_id, study_site_core, site_id, Site, Plot, core_id, Habitat_type, Year_collected,
Latitude, Longitude, U_depth_m, L_depth_m, OC_perc, N_perc, BD_reported_g_cm3, DOI)
# Specify the folder for saving the combined data
output_folder <- "Combined"
# Create the output folder if it doesn't exist
if (!dir.exists(output_folder)) dir.create(output_folder)
# Write the combined data frame to a new CSV file in the "Combined" folder
output_file <- file.path(output_folder, "Maxwell_combined_data.csv")
write.csv(combined_data2, output_file, row.names = FALSE)
library(dplyr)
library(readr)
df1 <- read.csv("combined/Maxwell_combined_data.csv")
df2 <- read.csv("combined/CCN_combined_data.csv")
# Assuming 'Latitude' and 'Longitude' are the problematic columns
df1 <- df1 %>% mutate(Latitude = as.character(Latitude), Longitude = as.character(Longitude))
df2 <- df2 %>% mutate(Latitude = as.character(Latitude), Longitude = as.character(Longitude))
df3 <- bind_rows(df1, df2, .id=NULL)
df4 <- df3 %>%
dplyr::select(Database, Source, study_id, study_site_core, site_id, Site, Plot, core_id, Habitat_type, Year_collected,
Latitude, Longitude, U_depth_m, L_depth_m, OC_perc, N_perc, BD_reported_g_cm3, DOI)
# Recategorize groups and create a new variable 'Recategorized_Habitat'
df4 <- df4 %>%
mutate(Habitat = case_when(
grepl("saltmarsh", Habitat_type, ignore.case = TRUE) ~ "marsh",
grepl("salt marsh", Habitat_type, ignore.case = TRUE) ~ "marsh",
grepl("marsh", Habitat_type, ignore.case = TRUE) ~ "marsh",
grepl("mangrove", Habitat_type, ignore.case = TRUE) ~ "mangrove",
grepl("seagrass", Habitat_type, ignore.case = TRUE) ~ "seagrass",
grepl("mudflat", Habitat_type, ignore.case = TRUE) ~ "mudflat",
grepl("tidal flat", Habitat_type, ignore.case = TRUE) ~ "mudflat",
grepl("high sabkha", Habitat_type, ignore.case = TRUE) ~ "mudflat",
grepl("low sabkha", Habitat_type, ignore.case = TRUE) ~ "mudflat",
grepl("microbial mat", Habitat_type, ignore.case = TRUE) ~ "mudflat",
grepl("peat", Habitat_type, ignore.case = TRUE) ~ "marsh",
TRUE ~ "Other"
))
df5 <- df4 %>%
mutate(CN = OC_perc/N_perc, centerdepth = U_depth_m + L_depth_m/2)
# Specify the folder for saving the recategorized data
output_folder_recategorized <- "Combined"
# Create the output folder if it doesn't exist
if (!dir.exists(output_folder_recategorized)) dir.create(output_folder_recategorized)
# Eliminate rows with NA in 'Source' or 'N_perc'
df6 <- df5 %>%
filter(!is.na(N_perc), !is.na(site_id))
# Write the recategorized data frame to a new CSV file in the "Recategorized" folder
output_file_recategorized <- file.path(output_folder_recategorized, "AllCombined.csv")
write.csv(df6, output_file_recategorized, row.names = FALSE)
# Install and load necessary libraries
# install.packages(c("sf", "rnaturalearth", "rnaturalearthdata"))
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
library(dplyr)
# Read your data (replace "your_data.csv" with your actual file name)
df1 <- read.csv("combined/AllCombined.csv")
df1_concatenated <- df1 %>%
mutate(site_plot = paste(study_id, site_id, core_id, sep = "_"))
# Convert Latitude and Longitude to numeric if needed
df1_concatenated$Latitude <- as.numeric(df1_concatenated$Latitude)
df1_concatenated$Longitude <- as.numeric(df1_concatenated$Longitude)
# summarize
df1_summarized <- df1_concatenated %>%
group_by(site_plot) %>%
summarize(
MeanLatitude = mean(Latitude, na.rm = TRUE),
MeanLongitude = mean(Longitude, na.rm = TRUE),
Habitat = Habitat # Add other summary statistics or variables as needed
)
# Load world map data from rnaturalearth
world <- ne_countries(scale = "medium", returnclass = "sf")
# Create a scatter plot of latitude vs longitude with a world map background
ggplot() +
geom_sf(data = world, fill = "white", color = "gray") +
geom_point(data = df1_summarized, aes(x = MeanLongitude, y = MeanLatitude, color = Habitat), shape = 1, size = 1, alpha=.5) +
labs(title = NULL,
x = NULL,
y = NULL) +
theme_minimal() +
theme(
legend.position = "none"  # Remove legend
) +
scale_color_manual(values = c("marsh" = "#00BFC4", "mangrove" = "#F8766D")) + # Specify colors for each level
coord_sf(lims_method = "geometry_bbox")  # Set lims_method to resolve the issue
library(dplyr)
library(tidyr)
# Read the CSV files into data frames
df1 <- read.csv("carbon/Wang_et_al_2021_car.csv")
# Read the CSV file into a data frame
All_combined <- read.csv("combined/AllCombined.csv")
# Assuming that All_combined has a "Habitat" column
All_combined <- All_combined %>%
filter(CN>1,CN<100, Habitat %in% c("marsh", "mangrove"))
# Calculate the mean value of the CN column and handle missing and infinite values
mean_CN <- mean(All_combined$CN[is.finite(All_combined$CN)], na.rm = TRUE)
Ndensity <- 1000* All_combined$N_perc/100*All_combined$BD_reported_g_cm3
print(Ndensity)
ggplot(All_combined, aes(y = Ndensity, fill = Habitat)) +
geom_histogram(bins= 40, color = "white") +
labs(
title = NULL,
y = expression("N density (mg N" ~ cm^{-3} ~ ")"),
x = "Observations"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text = element_text(size = 14),
axis.line.x = element_line(linewidth = 0.2),
axis.line.y = element_line(linewidth = 0.2),
legend.position = c(0.7, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 12)
) +
# Adjusted limits based on your preferences
#breaks = seq(0, 55, by = 10)  # Specify tick mark positions
#)
#scale_y_log10()+  # Log-scale the y-axis
scale_y_continuous(
limits = c(0.0, 6))+
scale_fill_manual(values = c("marsh" = "#00BFC4", "mangrove" = "#F8766D"))  # Specify colors for each level
Summary<-df %>%
group_by(Habitat) %>%
summary(Ndensity, na.rm=TRUE)
print (Summary) # ("mg cm-3")
print(summary(Ndensity, na.rm=TRUE))
library(dplyr)
library(tidyr)
library(ggplot2)
# ... (previous code remains unchanged)
# Create a histogram faceted by Habitat
hist_plot <- ggplot(All_combined, aes(y = CN, fill = Habitat)) +
geom_histogram(bins = 40, color = "white") +
labs(
title = NULL,
y = expression("Soil CN ratio"),
x = "Observations"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text = element_text(size = 14),
axis.line.x = element_line(linewidth = 0.2),
axis.line.y = element_line(linewidth = 0.2),
legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text = element_text(size = 11)
) +
scale_y_continuous(limits = c(0, 50)) +
#scale_y_log10() +  # Log-scale the y-axis
facet_wrap(~Habitat, scales = "free_x")  # Facet by Habitat with free y-axes
print(hist_plot)
# Load the necessary library
library(readr)
library(dplyr)
# Read the CSV file into a data frame
#df <- read_csv("combined/CCN_combined_data.csv")
#df<- read_csv("combined/Maxwell_combined_data.csv")
#total segments for CCN
unique_combinations <- df %>%
filter(Database %in% ("CCN"))%>%
distinct(study_site_core, U_depth_m) %>%
summarise(unique_combinations_count = n())
# Load necessary libraries
library(tidyverse)
library(ggExtra)
library(broom)
# Read the CSV file into a data frame
combined_data <- read.csv("combined/AllCombined.csv")
# Filter data for "Marsh" and "Mangrove" habitats and CN > 5
filtered_data <- combined_data %>%
filter(Habitat %in% c("marsh", "mangrove"),
CN > 5, CN < 100)  #filter out some wacky low and CN data
# Create a scatter plot with open circles and color by Habitat
plot <- ggplot(filtered_data, aes(x = OC_perc, y = N_perc, color = Habitat)) +
geom_point(shape = 1, alpha = 0.5) +  # Use shape = 1 for an open circle and set transparency
labs(title = NULL,
x = "Soil [Organic C] (%)",
y = "Soil [N] (%)") +
theme_minimal() +  # Adjusted to remove the gray background
theme(panel.grid = element_blank()) +
geom_smooth(aes(group = Habitat), method = "lm", se = FALSE) +  # Add linear best fit lines
theme(legend.position = "top-right") +  # Move the legend to the bottom
guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
theme(axis.text = element_text(size=12))+  # Adjust laxis font size
theme(axis.title  = element_text(size=14))
# Add text annotations to the graph panel
annotations <- data.frame(
x = c(18, 40),  # Specify x-coordinates of the annotations
y = c(2.5, .4),  # Specify y-coordinates of the annotations
label = c("Marsh", "Mangrove"),  # Specify the text labels
color = c("#00BFC4", "#F8766D")  # Specify color
)
# Add annotations to the plot
plot_with_annotations <- plot +
annotate("text", x = annotations$x, y = annotations$y, label = annotations$label, size = 5, color = annotations$color)
# Create marginal histograms with white fill
histo <- ggMarginal(plot_with_annotations, type = "histogram", bins = 40, fill = "lightgray", line = "lightgray")
# Fit linear models
lm_equations <- filtered_data %>%
group_by(Habitat) %>%
do(broom::tidy(lm(N_perc ~ OC_perc, data = .)))
# Print the equations
print(lm_equations)
print(histo)
library(dplyr)
library(tidyr)
library(ggplot2)
# ... (previous code remains unchanged)
# Create a histogram faceted by Habitat
hist_plot <- ggplot(All_combined, aes(y = CN, fill = Habitat)) +
geom_histogram(bins = 40, color = "white") +
labs(
title = NULL,
y = expression("Soil CN ratio"),
x = "Observations"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text = element_text(size = 14),
axis.line.x = element_line(linewidth = 0.2),
axis.line.y = element_line(linewidth = 0.2),
legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text = element_text(size = 11)
) +
scale_y_continuous(limits = c(0, 50)) +
#scale_y_log10() +  # Log-scale the y-axis
facet_wrap(~Habitat, scales = "free_x")  # Facet by Habitat with free y-axes
print(hist_plot)
library(dplyr)
library(tidyr)
# Read the CSV files into data frames
df1 <- read.csv("carbon/Wang_et_al_2021_car.csv")
# Read the CSV file into a data frame
All_combined <- read.csv("combined/AllCombined.csv")
# Assuming that All_combined has a "Habitat" column
All_combined <- All_combined %>%
filter(CN>1,CN<100, Habitat %in% c("marsh", "mangrove"))
# Calculate the mean value of the CN column and handle missing and infinite values
mean_CN <- mean(All_combined$CN[is.finite(All_combined$CN)], na.rm = TRUE)
Ndensity <- 1000* All_combined$N_perc/100*All_combined$BD_reported_g_cm3
print(Ndensity)
ggplot(All_combined, aes(y = Ndensity, fill = Habitat)) +
geom_histogram(bins= 40, color = "white") +
labs(
title = NULL,
y = expression("N density (mg N" ~ cm^{-3} ~ ")"),
x = "Observations"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text = element_text(size = 14),
axis.line.x = element_line(linewidth = 0.2),
axis.line.y = element_line(linewidth = 0.2),
legend.position = c(0.7, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 12)
) +
# Adjusted limits based on your preferences
#breaks = seq(0, 55, by = 10)  # Specify tick mark positions
#)
#scale_y_log10()+  # Log-scale the y-axis
scale_y_continuous(
limits = c(0.0, 6))+
scale_fill_manual(values = c("marsh" = "#00BFC4", "mangrove" = "#F8766D"))  # Specify colors for each level
Summary<-df %>%
group_by(Habitat) %>%
summary(Ndensity, na.rm=TRUE)
print (Summary) # ("mg cm-3")
print(summary(Ndensity, na.rm=TRUE))
#Run Blue N project
#getdata
# Location of individual data scripts
script_folder <- "scripts/"
# List all files in the script folder with a .R extension
script_files <- list.files(script_folder, pattern = "\\.R$", full.names = TRUE)
# Loop through each script file and source it
for (script_file in script_files) {
source(script_file)
}
